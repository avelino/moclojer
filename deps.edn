{:paths   ["src"]
 :deps    {cheshire/cheshire            {:mvn/version "5.11.0"}
           io.forward/yaml              {:mvn/version "1.0.11"}
           io.pedestal/pedestal.jetty   {:mvn/version "0.5.10"}
           io.pedestal/pedestal.route   {:mvn/version "0.5.10"}
           io.pedestal/pedestal.service {:mvn/version "0.5.10"}
           org.babashka/cli             {:mvn/version "0.7.51"}
           org.clojure/clojure          {:mvn/version "1.11.1"}
           org.clojure/core.async       {:mvn/version "1.5.648"}
           org.clojure/data.json        {:mvn/version "2.4.0"}
           com.taoensso/timbre          {:mvn/version "6.2.1"}
           org.slf4j/slf4j-jdk14        {:mvn/version "2.0.7"}
           org.slf4j/slf4j-simple       {:mvn/version "1.7.36"}
           selmer/selmer                {:mvn/version "1.12.52"}}
 :aliases {;; Run project
           ;; clj -M:run
           :run  {:main-opts ["-m" "babashka.cli.exec"]
                  :org.babashka/cli {:exec true}
                  :exec-fn    moclojer.core/-main}
           ;; clj -A:dev -m moclojer.core
           :dev      {:extra-paths ["dev"]
                      :extra-deps  {io.github.clojure/tools.build {:git/url    "https://github.com/clojure/tools.build.git"
                                                                   :sha        "ba1a2bf421838802e7bdefc541b41f57582e53b6"
                                                                   :exclusions [org.slf4j/slf4j-nop]}}}
           ;; Run all tests
           ;; clj -M:test
           ;; Run specific test
           ;; clj -M:test -n moclojer.core-test
           :test      {:extra-paths ["test"]
                       :resource-paths ["test/moclojer/resources"]
                       :extra-deps {io.github.cognitect-labs/test-runner {:git/tag "v0.5.0" :git/sha "b3fd0d2"}
                                    clj-kondo/clj-kondo                  {:mvn/version "2023.04.14"}
                                    cljfmt/cljfmt                        {:mvn/version "0.9.0"}}
                       :main-opts ["-m" "cognitect.test-runner"]
                       :exec-fn cognitect.test-runner.api/test}
           ;; Lint the source
           ;; clj -M:lint
           :lint      {:replace-deps {clj-kondo/clj-kondo {:mvn/version "2023.04.14"}}
                       :main-opts    ["-m" "clj-kondo.main" "--lint" "src"]}}}
