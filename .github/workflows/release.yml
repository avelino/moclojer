name: release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-jar:
    runs-on: "ubuntu-20.04"
    steps:
      - uses: "actions/checkout@v3"
      - uses: "actions/cache@v3.2.5"
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
          key: "${{ runner.os }}-deps-${{ hashFiles('deps.edn') }}"
      - uses: "DeLaGuardo/setup-clojure@10.1"
        with:
          cli: "1.11.1.1139"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - run: "clojure -A:dev -M --report stderr -m moclojer.build"
        env:
          CI_COMMIT_SHA: "${{ github.sha }}"
      - name: tar (pack) target folder
        run: tar -cjvf moclojer_target.tar.bz2 target
      - uses: "actions/upload-artifact@v3.1.2"
        with:
          name: moclojer_target.tar.bz2
          path: moclojer_target.tar.bz2
      - uses: "actions/upload-artifact@v3.1.2"
        with:
          name: moclojer_jar
          path: target/moclojer.jar
  build-native:
    needs: "build-jar"
    runs-on: "${{ matrix.os }}"
    name: "Build native image on ${{ matrix.os }}"
    strategy:
      matrix:
        os: [ "macos-11", "ubuntu-20.04" ]
    steps:
      - uses: "actions/checkout@v3"
      - uses: "graalvm/setup-graalvm@v1.0.9"
        with:
          version: "22.1.0"
          java-version: "17"
          components: "native-image"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - uses: "actions/download-artifact@v3"
        with:
          name: moclojer_target.tar.bz2
          path: moclojer_target.tar.bz2
      - name: tar (unpack) target folder
        run: tar -xf moclojer_target.tar.bz2 target
      - name: Gen reflect.config.json to ${{ runner.os }}
        working-directory: target/native
        run: |
          echo [] > moclojer.yml
          java -agentlib:native-image-agent=caller-filter-file=filter.json,config-output-dir=. \
            -jar ../moclojer.jar &
          PID=$!
          ## Wait startup
          while ! curl -s localhost:8000 -o /dev/null; do echo waiting; sleep 3; done
          curl -s localhost:8000 -D -
          kill $PID
      - name: GraalVM native image build moclojer binary to ${{ runner.os }}
        working-directory: target/native
        run: |
          native-image @native-image-args \
            -H:Name=moclojer_${{ runner.os }} \
            -H:DashboardDump=report/moclojer \
            -jar ../moclojer.jar \
            -H:ReflectionConfigurationFiles=reflect-config.json \
            -H:ResourceConfigurationFiles=resource-config.json && \
            cp moclojer moclojer_${{ runner.os }}
      - name: "Check http status"
        working-directory: target/native
        run: |
          echo [] > moclojer.yml
          chmod +x ./moclojer_${{ runner.os }}
          ./moclojer_${{ runner.os }} &
          PID=$!
          sleep 5
          curl -vvv -s -D - localhost:8000
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" localhost:8000)
          kill $PID
          if [ "x$STATUS" = "x200" ]; then
            exit 0
          else
            exit 1
          fi
      - uses: "actions/upload-artifact@v3.1.2"
        with:
          name: moclojer_bin_${{ runner.os }}
          path: target/native/moclojer_${{ runner.os }}
  release:
    needs: "build-native"
    runs-on: "ubuntu-20.04"
    environment: release
    steps:
    - uses: actions/checkout@v3
    - uses: "actions/download-artifact@v3"
      with:
        name: moclojer_bin_Linux
        path: moclojer_Linux
    - uses: "actions/download-artifact@v3"
      with:
        name: moclojer_bin_macOS
        path: moclojer_macOS
    - uses: "actions/download-artifact@v3"
      with:
        name: moclojer_jar
        path: moclojer.jar
    - name: Set release name
      run: echo "RELEASE_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
    - uses: softprops/action-gh-release@v1
      with:
        name: ${{ env.RELEASE_NAME }}
        files: |
          moclojer_Linux
          moclojer_macOS
          moclojer.jar
    - name: ghcr.io login
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.RELEASE_TOKEN }}
    - name: ghcr.io push
      run: |
        docker build -t ghcr.io/moclojer/moclojer:latest .
        docker tag ghcr.io/moclojer/moclojer:latest ghcr.io/moclojer/moclojer:${{ env.RELEASE_NAME }}
        docker push ghcr.io/moclojer/moclojer:latest
        docker push ghcr.io/moclojer/moclojer:${{ env.RELEASE_NAME }}
