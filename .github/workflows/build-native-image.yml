name: GraalVM Native Images

on: [pull_request, workflow_call]

jobs:
  call-build-jar:
    uses: moclojer/moclojer/.github/workflows/build-jar.yml@main

  build-native:
    needs: "call-build-jar"
    runs-on: "${{ matrix.os }}"
    name: "Build native image on ${{ matrix.os }}"
    strategy:
      matrix:
        os: [ "macos-11", "ubuntu-20.04" ]
    steps:
      - uses: "actions/checkout@v3"
      - uses: "graalvm/setup-graalvm@v1.1.1"
        with:
          version: "22.1.0"
          java-version: "17"
          components: "native-image"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - uses: "actions/download-artifact@v3"
        with:
          name: moclojer_target
          path: target
      - name: Gen reflect.config.json to ${{ runner.os }}
        working-directory: target/native
        run: |
          echo [] > moclojer.yml
          java -agentlib:native-image-agent=caller-filter-file=filter.json,config-output-dir=. \
            -jar ../moclojer.jar &
          PID=$!
          ## Wait startup
          while ! curl -s localhost:8000 -o /dev/null; do echo waiting; sleep 3; done
          curl -s localhost:8000 -D -
          kill $PID
      - name: GraalVM native image build moclojer binary to ${{ runner.os }}
        working-directory: target/native
        run: |
          native-image @native-image-args \
            -H:Name=moclojer_${{ runner.os }} \
            -H:DashboardDump=report/moclojer \
            -jar ../moclojer.jar \
            -H:ReflectionConfigurationFiles=reflect-config.json \
            -H:ResourceConfigurationFiles=resource-config.json && \
            cp moclojer moclojer_${{ runner.os }}
      - name: "Check http status"
        working-directory: target/native
        run: |
          echo [] > moclojer.yml
          chmod +x ./moclojer_${{ runner.os }}
          ./moclojer_${{ runner.os }} -c moclojer.yml &
          PID=$!
          sleep 5
          curl -vvv -s -D - localhost:8000
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" localhost:8000)
          kill $PID
          if [ "x$STATUS" = "x200" ]; then
            exit 0
          else
            exit 1
          fi
      # save binary generated for OS (by native image) in artifact
      # used in release
      - uses: "actions/upload-artifact@v3.1.2"
        with:
          name: moclojer_bin_${{ runner.os }}
          path: target/native/moclojer_${{ runner.os }}
