name: native-image

on:
  push:
    branches:
      - '!main'
  pull_request:

jobs:
  build-jar:
    runs-on: "ubuntu-20.04"
    steps:
      - uses: "actions/checkout@v3"
      - uses: "actions/cache@v3.2.2"
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
          key: "deps-${{ hashFiles('deps.edn') }}"
      - uses: "DeLaGuardo/setup-clojure@10.1"
        with:
          cli: "1.11.1.1139"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - run: "clojure -A:dev -M --report stderr -m moclojer.build"
        env:
          CI_COMMIT_SHA: "${{ github.sha }}"
      - uses: "actions/upload-artifact@v3.1.1"
        with:
          name: moclojer_target
          path: target
  native-image:
    needs: "build-jar"
    runs-on: "ubuntu-20.04"
    name: "Build native image"
    steps:
      - uses: "actions/checkout@v3"
      - uses: "graalvm/setup-graalvm@v1.0.9"
        with:
          version: "22.1.0"
          java-version: "17"
          components: "native-image"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - uses: "actions/download-artifact@v3"
        with:
          name: moclojer_target
          path: target
      - name: Gen reflect.config.json
        working-directory: target/native
        run: |
          echo [] > moclojer.yml
          java -agentlib:native-image-agent=caller-filter-file=filter.json,config-output-dir=. \
            -jar ../moclojer.jar &
          PID=$!
          ## Wait startup
          while ! curl -s localhost:8000 -o /dev/null; do echo waiting; sleep 3; done
          curl -s localhost:8000 -D -
          kill $PID
      - name: GraalVM native image build moclojer binary
        working-directory: target/native
        run: |
          native-image @native-image-args \
            -H:DashboardDump=report/moclojer \
            -jar ../moclojer.jar \
            -H:ReflectionConfigurationFiles=reflect-config.json \
            -H:ResourceConfigurationFiles=resource-config.json
      - name: "test native image: check http status"
        run: |
          echo [] > moclojer.yml
          chmod +x ./target/native/moclojer
          ./target/native/moclojer &
          PID=$!
          sleep 5
          curl -vvv -s -D - localhost:8000
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" localhost:8000)
          kill $PID
          if [ "x$STATUS" = "x200" ]; then
            exit 0
          else
            exit 1
          fi
